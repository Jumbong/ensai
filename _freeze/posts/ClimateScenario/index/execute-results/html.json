{
  "hash": "0920551881069d6ed3f9d505db7001f6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"simple tool in R to analyze data : Graph representation, p-value, test, odds ratio, etc.\"\ntoc: true\nnumber-sections: true\nauthor: \"Jumbong Junior\"\ndate: \"2023-11-16\"\ncategories: [news]\ntitle-block-banner: false\nhtml:\n    code-fold: true\n    toc: true\n---\n\n\n## Introduction\n\nThis document is primarily intended for second year students at ENSAI in general, and for those who are particularly interested in biostatistics. When we deal with data, an easy way to understand our work is to create a graph. This gives us an intuition about what we are doing. The advice to follow is to choose simplicity when using graphs and to favor those that everyone knows how to interpret. So when you create a graph, think about your audience and not your personal preferences. \n\nThere are also many concerns that we use every day to take decision and we don't know what they mean. For example the p-value. In this document, we will go through those concepts and explain them in a simple way. \n\n\n\n\n## Presentation of data.\n\nThe data used in this document come from [ParisSaclay Introduction à la statistique avec R - Session 21](https://www.fun-mooc.fr/fr/cours/introduction-a-la-statistique-avec-r/) if the mooc is available when you will read this document. The dataset has 799 observations and 26 variables. One observation represents a prisoner, and variables correspond to the mental health status of the prisoner. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## import library for readcsv\nlibrary(readr)\n\n## import data\nsetwd(\"C:/Users/johns/OneDrive/Bureau/code/blog/ensai/posts/ClimateScenario\")\n\ngetwd()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C:/Users/johns/OneDrive/Bureau/code/blog/ensai/posts/ClimateScenario\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsmp2 <- read_delim(\"data/smp2.csv\", delim = \";\",  \n    escape_double = FALSE, trim_ws = TRUE,show_col_types = FALSE)\n\nstr(smp2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [799 × 26] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ age         : num [1:799] 31 49 50 47 23 34 24 52 42 45 ...\n $ prof        : chr [1:799] \"autre\" NA \"prof.intermediaire\" \"ouvrier\" ...\n $ duree       : num [1:799] 4 NA 5 NA 4 NA NA 5 4 NA ...\n $ discip      : num [1:799] 0 0 0 0 1 0 0 0 1 0 ...\n $ n.enfant    : num [1:799] 2 7 2 0 1 3 5 2 1 2 ...\n $ n.fratrie   : num [1:799] 4 3 2 6 6 2 3 9 12 5 ...\n $ ecole       : num [1:799] 1 2 2 1 1 2 1 2 1 2 ...\n $ separation  : num [1:799] 0 1 0 1 1 0 1 0 1 0 ...\n $ juge.enfant : num [1:799] 0 0 0 0 NA 0 1 0 1 0 ...\n $ place       : num [1:799] 0 0 0 1 1 0 1 0 0 0 ...\n $ abus        : num [1:799] 0 0 0 0 0 0 0 0 1 1 ...\n $ grav.cons   : num [1:799] 1 2 2 1 2 1 5 1 5 5 ...\n $ dep.cons    : num [1:799] 0 0 0 0 1 0 1 0 1 0 ...\n $ ago.cons    : num [1:799] 1 0 0 0 0 0 0 0 0 0 ...\n $ ptsd.cons   : num [1:799] 0 0 0 0 0 0 0 0 0 0 ...\n $ alc.cons    : num [1:799] 0 0 0 0 0 0 0 0 1 1 ...\n $ subst.cons  : num [1:799] 0 0 0 0 0 0 1 0 1 0 ...\n $ scz.cons    : num [1:799] 0 0 0 0 0 0 0 0 0 0 ...\n $ char        : num [1:799] 1 1 1 1 1 1 1 1 4 1 ...\n $ rs          : num [1:799] 2 2 2 2 2 1 3 2 3 2 ...\n $ ed          : num [1:799] 1 2 3 2 2 2 3 2 3 2 ...\n $ dr          : num [1:799] 1 1 2 2 2 1 2 2 1 2 ...\n $ suicide.s   : num [1:799] 0 0 0 1 0 0 3 0 4 0 ...\n $ suicide.hr  : num [1:799] 0 0 0 0 0 0 1 0 1 0 ...\n $ suicide.past: num [1:799] 0 0 0 0 1 0 1 0 1 0 ...\n $ dur.interv  : num [1:799] NA 70 NA 105 NA NA 105 84 78 60 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   age = col_double(),\n  ..   prof = col_character(),\n  ..   duree = col_double(),\n  ..   discip = col_double(),\n  ..   n.enfant = col_double(),\n  ..   n.fratrie = col_double(),\n  ..   ecole = col_double(),\n  ..   separation = col_double(),\n  ..   juge.enfant = col_double(),\n  ..   place = col_double(),\n  ..   abus = col_double(),\n  ..   grav.cons = col_double(),\n  ..   dep.cons = col_double(),\n  ..   ago.cons = col_double(),\n  ..   ptsd.cons = col_double(),\n  ..   alc.cons = col_double(),\n  ..   subst.cons = col_double(),\n  ..   scz.cons = col_double(),\n  ..   char = col_double(),\n  ..   rs = col_double(),\n  ..   ed = col_double(),\n  ..   dr = col_double(),\n  ..   suicide.s = col_double(),\n  ..   suicide.hr = col_double(),\n  ..   suicide.past = col_double(),\n  ..   dur.interv = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n:::\n\n\nFor our analysis, we will use four variables :\n\n- `age` : numerical variable (the age of the prisoner in years)\n- `n.enfant` : numerical variable (the number of children)\n- `dep.cons` : Existence of a depressive disorder (0 = no, 1 = yes)\n- `prof` : prisoner's profession (1 = unemployed, 2 = farmer, 3 = independent, 4 = executive, 5 = employee, 6 = worker, 7 = retired, 8 = student).\n\nThe first thing we want to do is to analyze the distribution of each variable. \n\n## Distribution of categorical variables: profession.\n\n### Barplot\n\nThe graphic tool allow us to represent a distribution of categorical variables is the barplot.\nBefore we built the distribution of variable, we have an amazing tool in our hands to summarize the data. It is the `table` function. This function allows us to count the number of occurrences of each category in a variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## count the number of occurrences of each category in a variable\ntable(smp2$prof)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n       agriculteur            artisan              autre              cadre \n                 6                 90                 31                 24 \n           employe            ouvrier prof.intermediaire        sans emploi \n               135                227                 58                222 \n```\n\n\n:::\n:::\n\n\nThe result of the table function is a vector. We can use this vector to create a barplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create a barplot\nbarplot(table(smp2$prof), main = \"Distribution of profession\", xlab = \"Profession\", ylab = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n### Pie chart\n\nAnother way to represent the distribution of the category variable is the pie chart. The pie chart is a circle divided into sectors. Each sector represents a category of the variable. The size of the sector is proportional to the frequency of the category. Statistics don't like the pie chart because it is difficult to compare the size of the sectors. However, it is a good way to represent the distribution of a variable when the number of categories is small.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create a pie chart and put the legend on the right and the percentage\npie(table(smp2$dep.cons), main = \"Distribution of depressive disorder\", col = c(\"red\", \"blue\"), labels = c(\"No\", \"Yes\"), cex = 0.8)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Distribution of numerical variables: age\n\n### Histogram\n\nThe histogram is a graphical representation of the distribution of a numerical variable. Unlike barplot, We don't need to use the `table` function to create an histogram. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create an histogram\nhist(smp2$age, main = \"Distribution of age\", xlab = \"Age\", ylab = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nWe can also plot in the same graphic the density of the variable. The density is the probability of the variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create an histogram with density\nhist(smp2$age, main = \"Distribution of age\", xlab = \"Age\", ylab = \"Density\", freq = FALSE)\nlines(density(smp2$age,na.rm =T), col = \"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Boxplot\n\nThe boxplot is a graphical representation of the distribution of a numerical variable. The boxplot is composed of a box and two whiskers. The box represents the interquartile range (IQR). The whiskers represent the minimum and maximum values of the variable. The boxplot is a good way to detect outliers in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create a boxplot\nboxplot(smp2$age, main = \"Distribution of age\", xlab = \"Age\", ylab = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### Association between categorical and numerical variables\n\nThe  boxplot is a good way to represent the distribution of a numerical variable according to a categorical variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create a boxplot\nboxplot(smp2$age ~ smp2$dep.cons, main = \"Distribution of age according to depressive disorder\", xlab = \"Depressive disorder\", ylab = \"Age\")    \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Association between two numerical variables\n\nWhen you deal with two numerical variables.The best way to represent the association between them is the scatter plot. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create a scatter plot\nplot(smp2$age, smp2$n.enfant, main = \"Association between age and number of children\", xlab = \"Age\", ylab = \"Number of children\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nAs you see in this graphic, it seem like all the points are not represented. This is because the number of point is too large. R have a good function to deal with the problems : `jitter`. This function add a little noise to the data to avoid the overplotting.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create a scatter plot\nplot(jitter(smp2$age), jitter(smp2$n.enfant), main = \"Association between age and number of children\", xlab = \"Age\", ylab = \"Number of children\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Association between two categorical variables\n\nThe best way to represent the association between two categorical variables is to use a contingency table. A contingency table displays the frequency or count of observations that fall into each combination of the categories of the two variables. We can use the table of contingency to create a barplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create a contingency table\ntable(smp2$dep.cons, smp2$prof)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   \n    agriculteur artisan autre cadre employe ouvrier prof.intermediaire\n  0           4      62    22    16      79     131                 31\n  1           2      28     9     8      56      96                 27\n   \n    sans emploi\n  0         133\n  1          89\n```\n\n\n:::\n\n```{.r .cell-code}\n## create a barplot\nbarplot(table(smp2$dep.cons, smp2$prof), main = \"Association between depressive disorder and profession\", xlab = \"Depressive disorder\", ylab = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## The link between variable. \n\n### Correlation between two numerical variables\n\nThere are many ways to study the correlation between two numerical variables. The most common ways are the Pearson correlation coefficient and the Spearman correlation. The Pearson correlation coefficient is used when the two variables are normally distributed. The Spearman correlation is used when the two variables are not normally distributed. We can not use those tools if Variables have a missing values.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Pearson correlation\ncor(smp2$age, smp2$n.enfant, use = \"complete.obs\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4326039\n```\n\n\n:::\n\n```{.r .cell-code}\n## Spearman correlation\ncor(smp2$age, smp2$n.enfant, method = \"spearman\", use = \"complete.obs\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4243662\n```\n\n\n:::\n:::\n\n\n## Temporal evolution of a numerical variable\n\nI will finish by showing how to represent the evolution of the mean of a numerical variable over time. This is very useful In biostatistic When we want to show the evolution of a disease over time.\nI will use the package `gplots` to create the graph. You can use ggplot2 to create the same graph. We will use a temporal data outils_hdrs.csv.\nThe data have 3 variables :\n- NUMERO : the id of the patient\n- VISIT : the visit of the patient\n- HDRS : the score of the patient\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhdrs <- read_csv2(\"data/outils_hdrs.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1053 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (3): NUMERO, VISIT, HDRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(hdrs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [1,053 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ NUMERO: num [1:1053] 96 96 96 96 96 96 96 96 157 157 ...\n $ VISIT : num [1:1053] 0 4 7 14 21 28 42 56 0 4 ...\n $ HDRS  : num [1:1053] 34 26 12 7 5 1 1 1 27 19 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   NUMERO = col_double(),\n  ..   VISIT = col_double(),\n  ..   HDRS = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# install packages\n\n#install.packages(\"gplots\")  \n\nlibrary(gplots)  \n\n### Representation of the evolution of the mean of the HDRS score over time\nplotmeans(hdrs$HDRS~hdrs$VISIT,gap=0,barcol=\"black\",main=\"Evolution moyenne du HDRS dans le temps\",xlab=\"Visite\",ylab=\"HDRS moyen\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\nTo compute the same graph with ggplot2, you need to compute the mean, the first quartile and the third\nquartile of the HDRS score for each visit.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nhdrs_mean <- hdrs %>% \n  group_by(VISIT) %>%\n  summarise(mean = mean(HDRS,na.rm =T),\n            lower = quantile(HDRS,0.25,na.rm = T),\n            upper = quantile(HDRS,0.75,na.rm = T))\nhead(hdrs_mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  VISIT  mean lower upper\n  <dbl> <dbl> <dbl> <dbl>\n1     0  27.9  25      30\n2     4  25.2  23      28\n3     7  20.6  16      25\n4    14  16.7  12      22\n5    21  14.3   8      20\n6    28  11.5   6.5    16\n```\n\n\n:::\n:::\n\n\nNow we can create the graph with ggplot2.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(hdrs_mean, aes(x = VISIT, y = mean)) +\n  geom_point(size = 3) +\n  geom_line(size = 0) +\n  geom_errorbar(aes(ymin=lower, ymax=upper), width=1)+\n  scale_x_continuous(expand=c(0,0), breaks=c(0,4,7,14,21,28,42,56)) +\n  geom_vline(xintercept = 21, linetype=\"dashed\",\n               color = \"black\", size=1) +\n    theme_classic() +\n    theme(axis.line.x = element_line(color=\"black\", size = 0.5),\n          axis.line.y = element_line(color=\"black\", size = 0.5)) +\n    theme(axis.text=element_text(size=12, face=\"bold\"),\n          legend.title=element_blank(), legend.key = element_blank()) +\n    theme(axis.text=element_text(size=12), axis.title=element_text(size=12)) +\n    xlab(\"VISIT\")+\n    ylab(\"The mean score of the patient\") +\n    theme(legend.position = c(1,1)) +\n    theme(plot.margin = margin(1, 1, 1, 0.5, \"cm\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nLet's explain each part of this graphic :\n\n- The ggplot(hdrs_mean, aes(x = VISIT, y = mean)) + function creates the graph. The VISIT variable is on the x-axis and the mean variable is on the y-axis.\n- The geom_point(size = 3) + function creates the points of the graph.\n- The geom_line(size = 0) + function creates the line of the graph.\n- The geom_errorbar(aes(ymin=lower, ymax=upper), width=1) + function creates the error bars of the graph.\n- The scale_x_continuous(expand=c(0,0), breaks=c(0,4,7,14,21,28,42,56)) + function sets the x-axis.\n- The geom_vline(xintercept = 21, linetype=\"dashed\", color = \"black\", size=1) + function creates a vertical line at the 21st visit.\n- The theme_classic() + function sets the theme of the graph.\n- The theme(axis.line.x = element_line(color=\"black\", size = 0.5), axis.line.y = element_line(color=\"black\", size = 0.5)) + function sets the color and size of the axis lines.\n- The theme(axis.text=element_text(size=12, face=\"bold\"), legend.title=element_blank(), legend.key = element_blank()) + function sets the size and style of the axis text.\n- The theme(axis.text=element_text(size=12), axis.title=element_text(size=12)) + function sets the size of the axis text.\n- The xlab(\"VISIT\")+ ylab(\"The mean score of the patient\") + function sets the labels of the x-axis and y-axis.\n- The theme(legend.position = c(1,1)) + function sets the position of the legend.\n- The theme(plot.margin = margin(1, 1, 1, 0.5, \"cm\")) + function sets the margins of the graph.\n\n## Conclusion\n\nI will finish here And I hope that you will enjoy it. I will continue to write about the p-value, the test, the odds ratio, etc. in the next document.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}